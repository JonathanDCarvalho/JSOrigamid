Escopo de Função
Variáveis declaradas dentro de funções não são acessadas fora das mesmas.

Escopo evita o conflito entre nomes.

Declarar variáveis sem a palavra chave var, const ou let, cria uma variável que pode ser acessar em qualquer escopo (global). Isso é um erro.

'use strict' impede isso.

Escopo de Função (Pai)
Variáveis declaradas no escopo pai da função, conseguem ser acessadas pelas funções.

Escopo de Bloco
Variáveis criadas com var, vazam o bloco. Por isso com a introdução do ES6 a melhor forma de declarmos uma variável é utilizando const e let, pois estas respeitam o escopo de bloco.

Var Vaza o Bloco
Mesmo com a condição falsa, a variável ainda será declarada utilizando hoisting e o valor ficará como undefined.

Const e Let no lugar de Var
A partir de agora vamos utilizar apenas const e let para declarmos variáveis.

{} cria um bloco
Chaves {} criam um escopo de bloco, não confundir com a criação de objetos = {}

For Loop
Ao utilizar var dentro de um forloop, que é um bloco, o valor do variável utilizada irá vazar e existir fora do loop.

For Loop com Let
Com o let evitamos que o número vaze.

Const
Mantém o escopo no bloco, impede a redeclaração e impede a modificação do valor da variável, evitando bugs no código.

Variáveis com valores constantes devem utilizar o const.

Let
Mantém o escopo no bloco, impede a redeclaração, mas permite a modificação do valor da variável.

Geralmente vamos utilizar o const.